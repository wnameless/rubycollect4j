Version 1.0.1

+ First release


Version 1.1.0

+ Add RubyRange


Version 1.2.0

+ Add RubyDate

* Change the generic of Successive interface from <E extends Comparable<E>> to <E>

+ Add net.sf.rubycollect4j.succ package

* Move net.sf.rubycollect4j.range to net.sf.rubycollect4j.succ

- Remove net.sf.rubycollect4j.range package

* Made constructors of utility classes private

* Change RubyCollections::date behavior to close human nature
  Ex: date(2013, 7, 1) will create RubyDate(2013, Jul, 1) instead of RubyDate(2013, Aug, 1)

* Fix RubyRange::range behavior on the range of double
  range(1.09, 1.11).toA() will generate [1.09, 1.10, 1.11] instead of [1.09, 1.10]

* DoubleSuccessor constructor requires a precision now and it is not a singleton anymore


Version 1.2.1

* Bug fixed: RubyDir.glob("**/*") missed to retrieve the files of the very top level directory

+ Add weeks() to DateShifter which means date(2013, 1, 1).add(7).weeks() is able to use

+ Make rh() accept up to 20 pairs

+ Add year(), month(), day(), dayOfWeek(), dayOfYear(), week(), weekOfMonth(), hour(), minute(), second() & millisecond() to RubyDate


Version 1.3.0

* Improve RubyDir.glob() compatibility on Windows 

+ Throw RuntimeExceptions while Exceptions are caught

+ The binarySearch() of RubyArray now accepts block

+ Add compareByIdentity() feature for RubyHash

* RubyRange not requires Comparable objects to initialize anymore

* Moved newRubyArray(), newRubyHash(), newRubyEnumerable(), newRubyRnumerator(), newRubyRange() to RubyCollections

- Remove U(), X(), Ⴖ(), ㄍ(), ㄧ(), 十() from RubyArray

* Made RubyEnumerable an abstract class

* Change constructors of RubyArray & RubyHash to public

* Change foreach() of RubyIO to accept only a block


Version 1.3.1

* Fix the bugs when max(), maxBy(), min(), minBy(), minmax(), minmaxBy() of RubyEnumerable are called on an empty Iterable

* Add date() to RubyCollections


Version 1.4.0

- Remove google guava dependency

+ Implement RubyArray#pack()

+ Add RubyFile::join

* Add return value to RubyKernel::p


Version 1.4.1

* Fix CycleIterator#hasNext bug

* Fix EachLineIterator#next bug

* Change UnsupportedOperationException to IllegalStateException in RubyIO

* Change NoSuchElementException to IllegalArgumentException in RubyIO

* Override toString() methods of all Iterables

* Make RubyArray#push accept varargs

* Fix the bug of RubyArray#delete which happens while deleting null objects

* Fix the bugs of RubyArray#assoc & RubyArray#rassoc while encountering null objects

* Fix the bugs of RubyHash#rassoc & RubyHash#key while encountering null objects

* Fix the bug of RubyEnumerable#sortBy ordering

* Increase acceptable comparators of RubyEnumerable#sort & RubyEnumerable#sortBy

* Increase acceptable comparators of RubyArray#sortByǃ

* Change RubyHash entries to ComparableEntry

* Fix the bug of RubyFile#join

* Make RubyArray Comparable


Version 1.4.2

* Change all returned ComparableEntry to Entry

* Change all Iterable<ComparableEntry<K, V>> to Iterable<Entry<K, V>> 

* Change all Iterator<ComparableEntry<K, V>> to Iterator<Entry<K, V>> 


Version 1.5.0

+ Implement RubyEnumerable#lazy

+ Add freeze() & frozen?() to RubyArray & RubyHash

* Check 'false' in RubyEnumerable#all? & RubyEnumerable#any?

+ Add RubyArray#collectǃ & RubyArray#mapǃ


Version 1.5.1

* Change LazyRubyEnumerator to RubyLazyEnumerator


Version 1.5.2

- Remove RubyEnumerable#sort(Comparator comp) to adapt new Java8 List Interface

* Fix the bug of RubyIO UTF reading & writing

* Fix RubyFile#join bug on Windows


Version 1.5.3

* Auto close the InputStream if an EachLineIterator reaches to the end

* RubyIO#foreach can now take no block and return a RubyEnumerator

* RubyEnumerable#collect & RubyEnumerable#map can now take method name

* RubyArray#valuesAt & RubyHash#valuesAt can now take Iterable

* RubyCollections#Hash can now take RubyArray of List


Version 1.6.0

+ Add RubyObject#send

+ Most of the TransformBlocks in RubyCollect4J can now be replaced with method name and arguments (invoke method using Reflection)

+ Refactor code by adding RubyContract::Enumerable & RubyContract::Enumerator interfaces


Version 1.6.1

* Add RubyFile::size & RubyFile::expandPath(file, dir)

* Fix the remove logic of StepIterator

* Fix the potential bug of RubyArray#pack

* Defensive copies are made while constructing CombinationIterator, PermutationIterator, RepeatedCombinationIterator, RepeatedPermutationIterator, ProductIterator and ZipIterator

* RubyRnumerable#sortBy & RubyArray#sortBy! are no longer to do the second sorting on the elements which get the same transformed value


Version 1.6.2

+ Add @SafeVarargs annotations

* RubyArray#last(int n) throws IllegalArgumentException if n is < 0

* Reimplement LinkedIdentityMap

* RubyEnumerable#allʔ, anyʔ, oneʔ do not check Boolean.False anymore

* Fix the bug of RubyEnumerable#findIndex while finding the index of a null object 


Version 1.6.3

* Avoid file lock by initiating EachLineIterator lazily


Version 1.7.0

+ Add RubyString

+ Add CharacterSuccessor and extended RubyRange by it

+ Add RubyCollections#isBlank & RubyCollections#isNotBlank

* Correct the behavior of RubyArray#pack & RubyString#unpack

* Fix the bug of RubyArray#insert while using negative index

+ Add Serializable to RubyArray, RubyHash, RubyRange & RubyString


Version 1.7.1

* Use bounded wildcards to increased API flexibility


Version 1.7.2

+ Add static factory methods #of, #copyOf to RubyArray and RubyHash

* Deprecate RubyCollections#newRubyArray(List, boolean) and  RubyCollections#newRubyHash(LinkedHashMap, boolean)

- Remove RubyString#chars to solve the API conflict with Java 8 CharSequence


Version 1.7.3

* Fix RubyString#unpack Directive H,h,B,b bugs

* Modify RubyKernel#p behavior toward primitive arrays

* Change RubyArray#copyOf(List) to RubyArray#copyOf(Iterable)


Version 1.7.4

* Change RubyString#unpack to use ASCII-8bit encoding by adding ASCII8BitUTF

* Move ByteUtil to net.sf.rubycollect4j.util package


Version 1.7.5

* Increase the flexibility of RubyArray API by accepting Collection in certain methods

* Change Comparable<RubyArray> to Comparable<List> in RubyArray

* Improve the quality of entire JavaDoc

* Deprecate RubyCollections#newRubyString


Version 1.8.0

+ Add Ruby.Enumerable, Ruby.Enumerator and Ruby.LazyEnumerator interfaces

+ Add RubySet

- Remove deprecated methods

- Remove RubyCollections::newRubyRange

+ Expend RubyDate API

+ Add RubyEnumerator::of, RubyEnumerator::copyOf, RubyLazyEnumerator::of & RubyLazyEnumerator::copyOf

* Increase the acceptable number of RubyCollections::rh arguments from 20 to 26 key-value pairs


Version 1.8.1

* Fix RubyArray#sample bug


Version 1.8.2

+ Add RubyIO::open(File) and RubyIO::open(InputStream) methods

* Add Boolean.False detection to RubyEnumerable#allʔ, RubyEnumerable#anyʔ, RubyEnumerable#noneʔ and RubyEnumerable#oneʔ


Version 1.9.0

+ Add RubyIterables & RubyStrings

* Deprecate all methods which require Java reflection

+ Add chunkWhile method to Enumerable

+ Add grepV method to Enumerable

+ Add sliceAfter method to Enumerable

+ Add sliceWhen method to Enumerable

+ Add toH method to Enumerable

- Remove @SafeVarargs

Version 2.0.0

* JDK 1.8

+ Add Ruby class

+ Update all methods to Ruby 2.4

+ Add RubyRange#closed, #closedOpen, #open, #openClosed

+ Add #allWeek, #allMonth, #allQuarter, #allYear to RubyDate

+ Add #nextWeek, #nextMonth, #nextQuarter, #nextYear to RubyDate

+ Add #prevWeek, #prevMonth, #prevQuarter, #prevYear to RubyDate

+ Add #mondayʔ, #tuesdayʔ, #wednesdayʔ, #thursdayʔ, #friday?, #saturdayʔ, #sundayʔ, #onWeekdayʔ, #onWeekendʔ to RubyDate

+ Add RubyDate#wday, RubyDate#toDate
