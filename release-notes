Version 1.0.1

+ First release


Version 1.1.0

+ Added RubyRange


Version 1.2.0

+ Added RubyDate

* Changed the generic of Successive interface from <E extends Comparable<E>> to <E>

+ Added net.sf.rubycollect4j.succ package

* Moved net.sf.rubycollect4j.range to net.sf.rubycollect4j.succ

- Removed net.sf.rubycollect4j.range package

* Made constructors of utility classes private

* Changed RubyCollections::date behavior to close human nature
  Ex: date(2013, 7, 1) will create RubyDate(2013, Jul, 1) instead of RubyDate(2013, Aug, 1)

* Fixed RubyRange::range behavior on the range of double
  range(1.09, 1.11).toA() will generate [1.09, 1.10, 1.11] instead of [1.09, 1.10]

* DoubleSuccessor constructor requires a precision now and it is not a singleton anymore


Version 1.2.1

* Bug fixed: RubyDir.glob("**/*") missed to retrieve the files of the very top level directory

+ Added weeks() to DateShifter which means date(2013, 1, 1).add(7).weeks() is able to use

+ Made rh() accept up to 20 pairs

+ Added year(), month(), day(), dayOfWeek(), dayOfYear(), week(), weekOfMonth(), hour(), minute(), second() & millisecond() to RubyDate


Version 1.3.0

* Improved RubyDir.glob() compatibility on Windows 

+ Throws RuntimeExceptions while Exceptions are caught

+ The binarySearch() of RubyArray now accepts block

+ Added compareByIdentity() feature for RubyHash

* RubyRange not requires Comparable objects to initialize anymore

* Moved newRubyArray(), newRubyHash(), newRubyEnumerable(), newRubyRnumerator(), newRubyRange() to RubyCollections

- Removed U(), X(), Ⴖ(), ㄍ(), ㄧ(), 十() from RubyArray

* Made RubyEnumerable an abstract class

* Changed constructors of RubyArray & RubyHash to public

* Changed foreach() of RubyIO to accept only a block


Version 1.3.1

* Fixed the bugs when max(), maxBy(), min(), minBy(), minmax(), minmaxBy() of RubyEnumerable are called on an empty Iterable

* Added date() to RubyCollections


Version 1.4.0

- Removed google guava dependency

+ Implemented RubyArray#pack()

+ Added RubyFile::join

* Added return value to RubyKernel::p


Version 1.4.1

* Fixed CycleIterator#hasNext bug

* Fixed EachLineIterator#next bug

* Changed UnsupportedOperationException to IllegalStateException in RubyIO

* Changed NoSuchElementException to IllegalArgumentException in RubyIO

* Overrode toString() methods of all Iterables

* Made RubyArray#push accept varargs

* Fixed the bug of RubyArray#delete which happens while deleting null objects

* Fixed the bugs of RubyArray#assoc & RubyArray#rassoc while encountering null objects

* Fixed the bugs of RubyHash#rassoc & RubyHash#key while encountering null objects

* Fixed the bug of RubyEnumerable#sortBy ordering

* Increased acceptable comparators of RubyEnumerable#sort & RubyEnumerable#sortBy

* Increased acceptable comparators of RubyArray#sortByǃ

* Changed RubyHash entries to ComparableEntry

* Fixed the bug of RubyFile#join

* Made RubyArray Comparable


Version 1.4.2

* Changed all returned ComparableEntry to Entry

* Changed all Iterable<ComparableEntry<K, V>> to Iterable<Entry<K, V>> 

* Changed all Iterator<ComparableEntry<K, V>> to Iterator<Entry<K, V>> 


Version 1.5.0

+ Implemented RubyEnumerable#lazy

+ Added freeze() & frozen?() to RubyArray & RubyHash

* Checked 'false' in RubyEnumerable#all? & RubyEnumerable#any?

+ Added RubyArray#collectǃ & RubyArray#mapǃ


Version 1.5.1

* Changed LazyRubyEnumerator to RubyLazyEnumerator


Version 1.5.2

- Removed RubyEnumerable#sort(Comparator comp) to adapt new Java8 List Interface

* Fixed the bug of RubyIO UTF reading & writing

* Fixed RubyFile#join bug on Windows


Version 1.5.3

* Auto close the InputStream if an EachLineIterator reaches to the end

* RubyIO#foreach can now take no block and return a RubyEnumerator

* RubyEnumerable#collect & RubyEnumerable#map can now take method name

* RubyArray#valuesAt & RubyHash#valuesAt can now take Iterable

* RubyCollections#Hash can now take RubyArray of List


Version 1.6.0

* Made RubyEnumerable#collectConcat & RubyEnumerable#flatMap more generic

+ Added RubyObject#send

+ Most of the TransformBlocks in RubyArray & RubyEnumerable can now be replaced with method name and arguments
